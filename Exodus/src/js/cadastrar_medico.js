import axios from "axios";

export async function cadastrarMedico(medicoData, token) {
  try {
    console.info("%cüîç Verificando se o m√©dico j√° existe no sistema...", "color: #4FC3F7; font-weight: bold;");

    // 1Ô∏è‚É£ Verifica se o m√©dico existe no sistema
    const response = await axios.post(
      "http://localhost:8080/doctor/getByCrm",
      { crm: medicoData.crm }
    );

    console.info("%cResposta (getByCrm):", "color: #81C784;", response.data);

    // Se o m√©dico existe:
    if (response.data === true) {
      console.info("%c‚úÖ M√©dico encontrado no sistema. Verificando v√≠nculo com a cl√≠nica...", "color: #4CAF50; font-weight: bold;");

      // 2Ô∏è‚É£ Verifica se o m√©dico j√° est√° vinculado √† cl√≠nica
      const response2 = await axios.post(
        "http://localhost:8080/doctor/searchDoc",
        { crm: medicoData.crm },
        {
          headers: {
            Authorization: token ? `Bearer ${token}` : undefined,
          },
        }
      );

      console.info("%cResposta (searchDoc):", "color: #AED581;", response2.data);

      if (response2.data === true) {
        // 3Ô∏è‚É£ J√° cadastrado na cl√≠nica
        console.warn("%c‚ö†Ô∏è O m√©dico j√° est√° vinculado a esta cl√≠nica.", "color: #FFB300; font-weight: bold;");
        return {
          success: true,
          status: "jaCadastrado",
          message: "O m√©dico j√° est√° cadastrado nesta cl√≠nica.",
        };
      } else {
        // 4Ô∏è‚É£ Existe no sistema mas n√£o na cl√≠nica ‚Üí vincula/cadastra
        console.info("%cüîÅ M√©dico encontrado, transferindo para a cl√≠nica...", "color: #64B5F6; font-weight: bold;");

        const response3 = await axios.post(
          "http://localhost:8080/doctor/transferDoctor",
          medicoData,
          {
            headers: {
              Authorization: token ? `Bearer ${token}` : undefined,
            },
          }
        );

        console.info("%c‚úÖ M√©dico vinculado √† nova cl√≠nica:", "color: #81C784;", response3.data);

        return {
          success: true,
          status: "transferido",
          message: "M√©dico transferido para a cl√≠nica com sucesso.",
          data: response3.data,
        };
      }
    } else {
      // 5Ô∏è‚É£ M√©dico n√£o existe ‚Üí cadastrar no sistema
      console.info("%cüÜï M√©dico n√£o encontrado. Cadastrando novo m√©dico no sistema...", "color: #4DD0E1; font-weight: bold;");

      const response4 = await axios.post(
        "http://localhost:8080/doctor/register",
        medicoData,
        {
          headers: {
            Authorization: token ? `Bearer ${token}` : undefined,
          },
        }
      );

      console.info("%c‚úÖ M√©dico cadastrado do zero:", "color: #81C784;", response4.data);

      return {
        success: true,
        status: "novoCadastro",
        message: "M√©dico cadastrado no sistema com sucesso.",
        data: response4.data,
      };
    }
  } catch (error) {
    console.error("%c‚ùå Erro ao processar cadastro do m√©dico:", "color: #E57373; font-weight: bold;", error);

    // Se nada deu certo, retorna status neutro
    return {
      success: false,
      status: "erro",
      message: error.response?.data?.message || "Erro inesperado ao processar o cadastro.",
    };
  }
}
